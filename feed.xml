<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://jamesdvance.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://jamesdvance.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-03-24T16:45:07+00:00</updated><id>https://jamesdvance.github.io/feed.xml</id><title type="html">James Vance, ML Engineer</title><subtitle>Machine Learning Engineer </subtitle><entry><title type="html">The Principal Engineer Paradigm’</title><link href="https://jamesdvance.github.io/blog/2025/principal_engineers_paradigm/" rel="alternate" type="text/html" title="The Principal Engineer Paradigm’"/><published>2025-02-15T00:00:00+00:00</published><updated>2025-02-15T00:00:00+00:00</updated><id>https://jamesdvance.github.io/blog/2025/principal_engineers_paradigm</id><content type="html" xml:base="https://jamesdvance.github.io/blog/2025/principal_engineers_paradigm/"><![CDATA[<h1 id="the-principal-engineers-paradig">The Principal Engineer’s Paradig</h1> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/seraph-matrix-480.webp 480w,/assets/img/seraph-matrix-800.webp 800w,/assets/img/seraph-matrix-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/seraph-matrix.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="introduction">Introduction</h2> <p>As a Sr Engineer in Big Tech, I’ve been working with Principal Engineer the past month or so. It struck me the extento which the role is distinct role from the Sr, not that they are execute a Sr’s functions all the better. In this post I’m using ‘Principal’ based on the role’s level at Amazon. Other companies may call it Staff, or Sr Staff, but you will recognize it when you see it. It’s the top dawg on the technical reporting chain.</p> <h2 id="what-needs-to-be-done">What Needs To Be Done?</h2> <p>Sr. Engineers are trusted to lead designs. They pull off the <em>how</em>. Principal Engineers don’t add a lot of value by designing things better - the Sr Engineer’s designs should already be up to snuff. But Principal Engineers dig deep into <em>why the hell are we doing this particular task!?</em> <em>Does it really need to be done to accomplish the goal</em> ? <em>Can this step be simplified?</em> <em>Can it be removed?</em> Principals keep Srs from reinventing things and from choosing suboptimal tools from an org’s perspective. Even if its beened signed off on by various stakeholders, engineering managers, and cross-team collaborators, a Principal Eng can come in and question your project’s objective, your tools, timelines, and often your sanity.</p> <h2 id="are-you-sure-you-arent-wrong">Are You Sure You Aren’t Wrong?</h2> <p>Your manager may question your methods, but they’ll give you the benefit of the doubt. Over the weeks and months they’ve seen your work and heard your status updates. They trust that you’ll ultimately deliver and don’t spend too much time nit-picking your decisions. A Principal Engineer gives you no such quarter. They ruthlessly question your timeline estimates, your project plans, whether you have thought enough about security, scaling,reliability, and whether you have sufficient test coverage. To err is human, and a PE’s job is save you from this natural inclination.</p> <h2 id="isnt-this-a-pms-job">Isn’t This A PM’s Job?</h2> <p>A Principal Engineer and a Product Manager both have a main goal of making a project succeed. But the PE brings a technical perspective. They can challenge your estimates from a position of equal or superior technical knowledge as well as a superior understanding of your organization’s overall strategic approach to software. A PM might question your timelines, but only a PE can refute them.</p> <h2 id="owning-the-standards">Owning The Standards</h2> <p>If your software team builds one giant application, the Principal may make the highest-level decisions on your architecture:<br/> monolith vs microservices, multi-tenant vs single, bring your own container vs managed Kubernetes, etc. If the team builds many indpendent services, he may decide its standard tooling. Either way, it’s a way different responsibility level than leading a project. Decisions must be optimal given multiple systems and sets of engineers. What’s optimal for the organization level may be may be very suboptimal for an individual project or team, and the engineers involved may strongly resent the decision. Crucially, if things are going truly wrong, there is also no room to back up and change one’s mind. A project that is on a bad path can get back on track by engineers resolving to spend a few weekends grinding to get the project back on track. The PE-level decisions offer no such possibilities. PE decisions decide sustantial time and money investments, which once made can be the difference between the end product ultimately succeeding or failing. At decision time, it’s lonely at the top.</p> <h2 id="is-isnt-personal">Is Isn’t Personal</h2> <p>Good principal engineers have backbone. They may defend a data governance policy against two separate teams who have already agreed upon granting one-time exception. They may challenge and force a reversal on a well-debated technical decison. Invariablly, if you are an engineer making consequential decisions, the PE will outright annoy you at some point. But if they never make you unhappy or uncomfortable, they aren’t an effective Principal.</p> <h2 id="building-this-skill">Building This Skill</h2> <p>A lot of us got into tech for the love of puzzles, the thrill of finding things out, and the commradarie of building things. A good PE experiences little of that. He spends most of his time above the weeds, doesn’t stay on a single project, and frequently pisses off engineering managers and Sr Engineers. Yet, if you want to make the biggest technical impact you can, you must develop this separate set of skills. <u>The Staff Engineer's Guide</u> by Tanya Reilly is a good resource to explore the role in depth. But to fully understand their purpose it helps to experience a challenge from a Principal Engineer in your own work. Because as Seraph says in <u>The Matrix Reloaded</u>:</p> <blockquote> <p>You Never Really Know A Man Until You Fight Him - Seraph</p> </blockquote>]]></content><author><name></name></author><category term="career"/><category term="career,"/><summary type="html"><![CDATA[Understanding the Role]]></summary></entry><entry><title type="html">A Personal Project MLOps Platform’</title><link href="https://jamesdvance.github.io/blog/2024/a-personal-project-mlops-platform/" rel="alternate" type="text/html" title="A Personal Project MLOps Platform’"/><published>2024-12-02T13:11:00+00:00</published><updated>2024-12-02T13:11:00+00:00</updated><id>https://jamesdvance.github.io/blog/2024/a-personal-project-mlops-platform</id><content type="html" xml:base="https://jamesdvance.github.io/blog/2024/a-personal-project-mlops-platform/"><![CDATA[<h2 id="build-vs-buy---managed-mlops">Build vs Buy - Managed MLOps</h2> <h3 id="inspiration">Inspiration</h3> <p>Machine Learning Engineers need to be able to deploy infrastructure to facilitate develop, train and deploy models as efficiently as possible. Since before the invention of transformers machine learning has depended on quick iteration cycles and feedback loops. But when machine learning teams scale, the quickness of iteration is stimied by reacting to the needs of individual models and problem areas. Some models require distributed GPU clusters, others can be experimented on single CPU. Some have hard-to-configure dependency environments which must be shared seamlessly between scientists. Model serving creates another large layer of complexity, with batch vs online serving, event-driven vs response-based, and CICD requirements.</p> <p>TODO - add CRISP cycle image</p> <p>An ideal MLOps solution will allow teams to manage the varying components of the machine learning cycle without jumping between different interfaces and solutions. It also would allow flexibility to tackle brand new configurations, such as switching to event-driven serving or adding a batch processing solution. For these reasons, Kubernetes[3] stands out as a solution and is widely used across top tier tech companies and AI labs. Just prior to releasing ChatGPT, OpenAI described <a href="https://openai.com/index/scaling-kubernetes-to-7500-nodes/">scaling a Kubernetes cluster to 7500 nodes</a>.</p> <h3 id="why-a-kubernetes-based-solution">Why A Kubernetes-based Solution</h3> <p>Why not a full-service ML platform like <a href="https://domino.ai/">Domino Data Labs</a>, H2O.ai, or even <a href="https://aws.amazon.com/sagemaker/studio/">Sagemaker Studio</a>? Kubernetes lets ML Engineering teams scale on their own terms and best tailor their solutions to their own needs. Conversely, ML platforms lock users into their format and then annual subscription fees. At its a best, an internally-built containerized solution can be designed to be multi-cloud and avoid vendor lock-in. Finally, the advent of generative AI means organizations are experimenting with workflows which may have needs beyond what traditional ML platforms support. In order to fully empower AI teams to innovate, teams can give their engineers access to theoretically limitless compute and high flexibility.</p> <h3 id="starting-out">Starting Out</h3> <p>Terraform is the most popular and versatile Infrastructure as Code (IaC) language. Importantly, its format can be used across cloud vendors. A basic Google Cloud ‘Google Kubernetes Engine’ (GKE) cluster is shown below. It initializes the GKE cluster with a single node, and provides a workload itendifier, so each node in the cluster can access cloud resources without needing to individually authenticate.</p> <div class="language-tf highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># GKE Cluster </span>
<span class="k">resource</span> <span class="s2">"google_container_cluster"</span> <span class="s2">"primary"</span> <span class="p">{</span>
    <span class="nx">name</span> <span class="o">=</span> <span class="kd">local</span><span class="p">.</span><span class="nx">cluster_name</span>
    <span class="nx">location</span> <span class="o">=</span> <span class="kd">local</span><span class="p">.</span><span class="nx">gcp_region</span>

    <span class="nx">remove_default_node_pool</span> <span class="o">=</span> <span class="kc">true</span>
    <span class="nx">initial_node_count</span> <span class="o">=</span> <span class="mi">1</span> 

    <span class="c1"># GKE Version</span>
    <span class="nx">min_master_version</span> <span class="o">=</span> <span class="kd">local</span><span class="p">.</span><span class="nx">gke_version</span>

    <span class="c1"># Workload Identity</span>
    <span class="nx">workload_identity_config</span> <span class="p">{</span>
       <span class="nx">workload_pool</span> <span class="o">=</span> <span class="s2">"</span><span class="p">${</span><span class="kd">local</span><span class="p">.</span><span class="nx">project_id</span><span class="p">}</span><span class="s2">.svc.id.goog"</span>
    <span class="p">}</span>    
<span class="p">}</span>

</code></pre></div></div> <p><a href="TODO - add github link">See full file here</a></p> <p>Running <code class="language-plaintext highlighter-rouge">terraform plan</code> will demonstrate the attributes of this stack. It should describe a simple cluster. Next, to deploy this cluster to our GCP project, we can run <code class="language-plaintext highlighter-rouge">terraform apply</code>. If this is a new project, we’ll need to enable the GKE API for the project and also link the project to a billing account.</p> <h3 id="picking-an-ml-kubernetes-framework">Picking An ML Kubernetes Framework</h3> <p>Kubeflow, Metaflow, and Bodywork are potential ML Frameworks which run on Kubernetes. Kubeflow has multiple advantages. First, it is well-supported as it initially was developed Google and is now maintained by the Cloud Native Computing Foundation. Another strength is its thoroughness and customization. Kubeflow offers specialized Kubernetes operators [4] for Notebooks, Workflows and Schedules, Training, Model Tuning, Serving, Model registry and a central monitoring dashboard. These custom operators also provide a customization in that they allow users to device which components are necessary at a given time. This makes Kubeflow adjustable to small projects or enterprise scale, as opposed to say Metaflow which is more of an all-in-one solution meant for a large scale project.</p> <h3 id="installing-kubeflow">Installing Kubeflow</h3> <p>Kubernetes Deployments require Objects [10] which include a <em>spec</em> which describe the desired state of your application. Kubernetes works to ensure your application matches the spec,and uses the <em>status</em> to describe how the application is actually running. That spec is defined via a config file (usually YAML) called a <em>manifest</em>. Kubernetes offers a myriad of ways to install packages. Individual Kubeflow components can be installed via the <a href="https://github.com/kubeflow/manifests">Kubeflow manifests repository</a>. Kubeflow allows you to install the entire platform or individual components as needed. For sake of example, we’ll install the training component. At time of writing I can install the stable release of the training componenent with the kubectl cli:</p> <ol> <li>Authenticate our cluster with glcoud cli <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud container clusters get-credentials kubeflow-mlops     <span class="nt">--region</span><span class="o">=</span>us-central1 
</code></pre></div> </div> </li> <li>Apply kubeflow training-operator manifest to our cluster <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl apply <span class="nt">-k</span> <span class="s2">"github.com/kubeflow/training-operator.git/manifests/overlays/standalone?ref=v1.7.0"</span>
</code></pre></div> </div> <p>The output should look something like this</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>namespace/kubeflow created
customresourcedefinition.apiextensions.k8s.io/mpijobs.kubeflow.org created
customresourcedefinition.apiextensions.k8s.io/mxjobs.kubeflow.org created
customresourcedefinition.apiextensions.k8s.io/paddlejobs.kubeflow.org created
customresourcedefinition.apiextensions.k8s.io/pytorchjobs.kubeflow.org created
customresourcedefinition.apiextensions.k8s.io/tfjobs.kubeflow.org created
customresourcedefinition.apiextensions.k8s.io/xgboostjobs.kubeflow.org created
serviceaccount/training-operator created
clusterrole.rbac.authorization.k8s.io/training-operator created
clusterrolebinding.rbac.authorization.k8s.io/training-operator created
service/training-operator created
deployment.apps/training-operator created
</code></pre></div> </div> </li> </ol> <h3 id="defining-a-training-job">Defining A Training Job</h3> <p>Thanks to our Kubeconfig file (created when we authenticated above) we can define a Python training job locally and run it on our distributed Kubernetes cluster.</p> <h3 id="creating-a-workflow">Creating A Workflow</h3> <p>A Deployment</p> <h3 id="creating-seperate-node-pools">Creating Seperate Node Pools</h3> <h3 id="wrapping-up">Wrapping Up</h3> <h3 id="resources">Resources</h3> <p>[1]<a href="https://github.com/spotify/terraform-gke-kubeflow-cluster">Spotify’s cluster</a> [2] <a href="https://combinator.ml/">Combinator.ml</a> [3] <a href="https://kubernetes.io/docs/concepts/overview/">Kubernetes</a> [4] <a href="https://www.kubeflow.org/docs/components/">Kubeflow Componenets</a> [5] <a href="https://metaflow.org/">Metaflow</a> [6] <a href="https://github.com/bodywork-ml/bodywork-core">Bodywork</a> [7] <a href="https://kubernetes.io/docs/concepts/workloads/management/">Kubernetes Manifest</a> [8] <a href="https://openai.com/index/scaling-kubernetes-to-7500-nodes/">OpenAI Scaling Kubernetes</a> [9] <a href="https://kubernetes.io/case-studies/openai/">OpenAI Case Study Kubernetes</a> [10] <a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/#kubernetes-objects">Kubernetes Objects</a> [11] <a href="https://github.com/provectus/sak-kubeflow">Swiss Army Cube</a> [12] <a href="https://registry.terraform.io/modules/young-ook/eks/aws/1.7.6/examples/kubeflow">Kubeflow on EKS</a></p>]]></content><author><name></name></author><category term="mlops"/><category term="mlops,"/><category term="kubeflow,"/><category term="terraform"/><summary type="html"><![CDATA[A Basic MLOps Setup With Kubeflow]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://jamesdvance.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://jamesdvance.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://jamesdvance.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024[[read-time]] min read We’re introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we’re introducing Gemini 1.5 Flash: a model that’s lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We’re also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5’s 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It’s optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it’s a lighter weight model than 1.5 Pro, it’s highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it’s been trained by 1.5 Pro through a process called “distillation,” where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash’s availability and pricing.Over the last few months, we’ve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we’ve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We’ve improved control over the model’s responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we’ve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we’re now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do — not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we’re also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We’re announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we’ve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind’s mission to build AI responsibly to benefit humanity, we’ve always wanted to develop universal AI agents that can be helpful in everyday life. That’s why today, we’re sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do — and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we’ve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we’ve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we’ve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they’re being used in, and respond quickly, in conversation.With technology like this, it’s easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We’ve made incredible progress so far with our family of Gemini models, and we’re always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we’re able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google’s privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let’s stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Charming Algorithms 1 - ‘3Sum Closest’</title><link href="https://jamesdvance.github.io/blog/2023/charming-algorithms-1-3Sum-Closest/" rel="alternate" type="text/html" title="Charming Algorithms 1 - ‘3Sum Closest’"/><published>2023-12-02T13:11:00+00:00</published><updated>2023-12-02T13:11:00+00:00</updated><id>https://jamesdvance.github.io/blog/2023/charming-algorithms-1-3Sum-Closest</id><content type="html" xml:base="https://jamesdvance.github.io/blog/2023/charming-algorithms-1-3Sum-Closest/"><![CDATA[<h2 id="charming-algorithms-1--3sum-no-not-that-closest">Charming Algorithms 1 : 3Sum (No, not that) Closest</h2> <h3 id="problem">Problem</h3> <p>This <a href="https://leetcode.com/problems/3sum-closest">problem</a> asks the user to find the three numbers in an array whose sum is closet to the target number.</p> <h3 id="intuition">Intuition</h3> <p>The brute force method would be to multiply every 3 combinations of numbers by each other and finding the closet to the target value. This would have ‘N choose K’ time complexity where K = 3. n!/k!(n-k)!. We never want factorials to be part of our time complexity, so we have to look for a better solution.</p> <p>Similar to 2Sum and 3Sum, we can sort the array to reduce our exploration space. After sorting, we have a setup for a two-pointer technique. A minor detail is that we need to evaluate 3 points, not two. However, similar to the 3Sum solution, we can isolate a two-sum solution quite easily. To do so, we iterate over the array and create a subarray from our iteration point to the end of the array. In that subarray, our first pointer will always be the first element of the array. The other two pointers are assigned using the two-pointer technique. One starts at the first available starting position (start + 1) and the other at the end of the array. From there, the algorithm evaluates the sum of the 3 pointers. If the sum equals the target, we can return the sum. If it is closer than our existing solution, it takes the place of our existing solution. If neither is true, then we move the two pointers closer to each other. If the current sum is less than the target, then we want our next sum to be larger than this one. So we move the first of the two pointers up by one. If the current sum is already greater than the target, then we move the last of the pointers down by one. Because the array is sorted, these conditions make our decision process straightforward. Once the first and last of the two-pointers meet, we stop the algorithm.</p> <h3 id="runtime">Runtime</h3> <p>The solution becomes O(N^2) because in worst case we iterate over the array once and for each iteration we iterate over a subset of the entire array again. It’s like a double for-loop where the second loop gets smaller each time. So technically its less than O(N^2) but for rule-of-thumb estimate, O(N^2) works fine.</p> <h3 id="steps">Steps</h3> <ol> <li>Sort the array</li> <li>Initialize the result as the sum of the first 3 elements.</li> <li>Iterate over the array. At each iteration, perform the two-pointer iteration starting at the next index and ending at the end of the array.</li> <li>Return the result if the sum of the three indexes matches the target, re-assign if the new sum is closer than the old one, or increment or decrement the two-pointer locations depending on whether our current sum is bigger or smaller than the target.</li> </ol> <h3 id="code">Code</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">threeSumClosest</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">:</span> <span class="n">List</span><span class="p">[</span><span class="nb">int</span><span class="p">],</span> <span class="n">target</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">int</span><span class="p">:</span>
        <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span>

        <span class="n">nums</span><span class="p">.</span><span class="nf">sort</span><span class="p">()</span> <span class="c1"># O(NlogN)
</span>
        <span class="n">result</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">nums</span><span class="p">[:</span><span class="mi">3</span><span class="p">])</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="p">):</span>
            <span class="n">j</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span> <span class="o">-</span><span class="mi">1</span> 

            <span class="k">while</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">k</span><span class="p">:</span>
                <span class="n">total</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">nums</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>

                <span class="k">if</span> <span class="n">total</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">total</span>
                
                <span class="k">if</span> <span class="nf">abs</span><span class="p">(</span><span class="n">total</span> <span class="o">-</span> <span class="n">target</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nf">abs</span><span class="p">(</span><span class="n">result</span> <span class="o">-</span> <span class="n">target</span><span class="p">):</span>
                    <span class="n">result</span> <span class="o">=</span> <span class="n">total</span> 
                
                <span class="k">if</span> <span class="n">total</span> <span class="o">&lt;</span> <span class="n">target</span><span class="p">:</span> 
                    <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
                
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">k</span> <span class="o">-=</span> <span class="mi">1</span>
            
        <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="charming-algorithms"/><category term="algorithms,"/><category term="leetcode"/><summary type="html"><![CDATA[Intuition For the solution to '3Sum - Closest']]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://jamesdvance.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://jamesdvance.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://jamesdvance.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[<h3>External Posts on Your al-folio Blog</h3> <p>If you prefer publishing blog posts on medium.com or other external sources, starting version v0.5.0, <a href="https://github.com/alshedivat/al-folio">al-folio</a> lets you to display your external posts in the blog feed of your website! 🎉🎉</p> <p>Configuring external sources of super simple. After upgrading to v0.5.0, just add the following section to your _config.yml:</p> <pre>external_sources:<br />  - name: medium.com  # name of the source (arbitrary string)<br />    rss_url: <a href="https://medium.com/@al-folio/feed">https://medium.com/@&lt;your-medium-username&gt;/feed</a></pre> <p>The example above adds your medium.com blog post feed as an external source. But you can add arbitrary RSS feeds as sources.</p> <p>Any questions or suggestions? 👉 Start <a href="https://github.com/alshedivat/al-folio/discussions">a discussion on GitHub</a>!</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b60a1d241a0a" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry></feed>